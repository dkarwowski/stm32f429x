# [ doc = r" Value to write to the register" ] pub struct W { bits : u32 } impl super :: Icr { # [ doc = r" Writes to the register" ] # [ inline ( always ) ] pub fn write < F > ( & self , f : F ) where F : FnOnce ( & mut W ) -> & mut W { let mut w = W :: reset_value ( ) ; f ( & mut w ) ; self . register . set ( w . bits ) ; } } # [ doc = r" Proxy" ] pub struct _CrrifW < 'a > { w : & 'a mut W } impl < 'a > _CrrifW < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 3 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _CterrifW < 'a > { w : & 'a mut W } impl < 'a > _CterrifW < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 2 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _CfuifW < 'a > { w : & 'a mut W } impl < 'a > _CfuifW < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 1 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _ClifW < 'a > { w : & 'a mut W } impl < 'a > _ClifW < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 0 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } impl W { # [ doc = r" Reset value of the register" ] # [ inline ( always ) ] pub fn reset_value ( ) -> W { W { bits : 0 } } # [ doc = r" Writes raw bits to the register" ] # [ inline ( always ) ] pub unsafe fn bits ( & mut self , bits : u32 ) -> & mut Self { self . bits = bits ; self } # [ doc = "Bit 3 - Clears Register Reload Interrupt Flag" ] # [ inline ( always ) ] pub fn crrif ( & mut self ) -> _CrrifW { _CrrifW { w : self } } # [ doc = "Bit 2 - Clears the Transfer Error Interrupt Flag" ] # [ inline ( always ) ] pub fn cterrif ( & mut self ) -> _CterrifW { _CterrifW { w : self } } # [ doc = "Bit 1 - Clears the FIFO Underrun Interrupt flag" ] # [ inline ( always ) ] pub fn cfuif ( & mut self ) -> _CfuifW { _CfuifW { w : self } } # [ doc = "Bit 0 - Clears the Line Interrupt Flag" ] # [ inline ( always ) ] pub fn clif ( & mut self ) -> _ClifW { _ClifW { w : self } } }