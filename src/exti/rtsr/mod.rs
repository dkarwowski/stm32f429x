# [ doc = r" Value read from the register" ] pub struct R { bits : u32 } # [ doc = r" Value to write to the register" ] pub struct W { bits : u32 } impl super :: Rtsr { # [ doc = r" Modifies the contents of the register" ] # [ inline ( always ) ] pub fn modify < F > ( & self , f : F ) where for < 'w > F : FnOnce ( & R , & 'w mut W ) -> & 'w mut W { let bits = self . register . get ( ) ; let r = R { bits : bits } ; let mut w = W { bits : bits } ; f ( & r , & mut w ) ; self . register . set ( w . bits ) ; } # [ doc = r" Reads the contents of the register" ] # [ inline ( always ) ] pub fn read ( & self ) -> R { R { bits : self . register . get ( ) } } # [ doc = r" Writes to the register" ] # [ inline ( always ) ] pub fn write < F > ( & self , f : F ) where F : FnOnce ( & mut W ) -> & mut W { let mut w = W :: reset_value ( ) ; f ( & mut w ) ; self . register . set ( w . bits ) ; } } # [ doc = r" Value of the field" ] pub struct Tr0R { bits : u8 } impl Tr0R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr1R { bits : u8 } impl Tr1R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr2R { bits : u8 } impl Tr2R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr3R { bits : u8 } impl Tr3R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr4R { bits : u8 } impl Tr4R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr5R { bits : u8 } impl Tr5R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr6R { bits : u8 } impl Tr6R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr7R { bits : u8 } impl Tr7R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr8R { bits : u8 } impl Tr8R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr9R { bits : u8 } impl Tr9R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr10R { bits : u8 } impl Tr10R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr11R { bits : u8 } impl Tr11R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr12R { bits : u8 } impl Tr12R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr13R { bits : u8 } impl Tr13R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr14R { bits : u8 } impl Tr14R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr15R { bits : u8 } impl Tr15R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr16R { bits : u8 } impl Tr16R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr17R { bits : u8 } impl Tr17R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr18R { bits : u8 } impl Tr18R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr19R { bits : u8 } impl Tr19R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr20R { bits : u8 } impl Tr20R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr21R { bits : u8 } impl Tr21R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Value of the field" ] pub struct Tr22R { bits : u8 } impl Tr22R { # [ doc = r" Value of the field as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u8 { self . bits } } # [ doc = r" Proxy" ] pub struct _Tr0W < 'a > { w : & 'a mut W } impl < 'a > _Tr0W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 0 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr1W < 'a > { w : & 'a mut W } impl < 'a > _Tr1W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 1 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr2W < 'a > { w : & 'a mut W } impl < 'a > _Tr2W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 2 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr3W < 'a > { w : & 'a mut W } impl < 'a > _Tr3W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 3 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr4W < 'a > { w : & 'a mut W } impl < 'a > _Tr4W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 4 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr5W < 'a > { w : & 'a mut W } impl < 'a > _Tr5W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 5 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr6W < 'a > { w : & 'a mut W } impl < 'a > _Tr6W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 6 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr7W < 'a > { w : & 'a mut W } impl < 'a > _Tr7W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 7 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr8W < 'a > { w : & 'a mut W } impl < 'a > _Tr8W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 8 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr9W < 'a > { w : & 'a mut W } impl < 'a > _Tr9W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 9 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr10W < 'a > { w : & 'a mut W } impl < 'a > _Tr10W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 10 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr11W < 'a > { w : & 'a mut W } impl < 'a > _Tr11W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 11 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr12W < 'a > { w : & 'a mut W } impl < 'a > _Tr12W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 12 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr13W < 'a > { w : & 'a mut W } impl < 'a > _Tr13W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 13 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr14W < 'a > { w : & 'a mut W } impl < 'a > _Tr14W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 14 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr15W < 'a > { w : & 'a mut W } impl < 'a > _Tr15W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 15 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr16W < 'a > { w : & 'a mut W } impl < 'a > _Tr16W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 16 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr17W < 'a > { w : & 'a mut W } impl < 'a > _Tr17W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 17 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr18W < 'a > { w : & 'a mut W } impl < 'a > _Tr18W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 18 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr19W < 'a > { w : & 'a mut W } impl < 'a > _Tr19W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 19 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr20W < 'a > { w : & 'a mut W } impl < 'a > _Tr20W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 20 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr21W < 'a > { w : & 'a mut W } impl < 'a > _Tr21W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 21 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } # [ doc = r" Proxy" ] pub struct _Tr22W < 'a > { w : & 'a mut W } impl < 'a > _Tr22W < 'a > { # [ doc = r" Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , bits : u8 ) -> & 'a mut W { const MASK : u8 = 1 ; const OFFSET : u8 = 22 ; self . w . bits &= ! ( ( MASK as u32 ) << OFFSET ) ; self . w . bits |= ( ( bits & MASK ) as u32 ) << OFFSET ; self . w } } impl R { # [ doc = r" Value of the register as raw bits" ] # [ inline ( always ) ] pub fn bits ( & self ) -> u32 { self . bits } # [ doc = "Bit 0 - Rising trigger event configuration of line 0" ] # [ inline ( always ) ] pub fn tr0 ( & self ) -> Tr0R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 0 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr0R { bits } } # [ doc = "Bit 1 - Rising trigger event configuration of line 1" ] # [ inline ( always ) ] pub fn tr1 ( & self ) -> Tr1R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 1 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr1R { bits } } # [ doc = "Bit 2 - Rising trigger event configuration of line 2" ] # [ inline ( always ) ] pub fn tr2 ( & self ) -> Tr2R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 2 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr2R { bits } } # [ doc = "Bit 3 - Rising trigger event configuration of line 3" ] # [ inline ( always ) ] pub fn tr3 ( & self ) -> Tr3R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 3 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr3R { bits } } # [ doc = "Bit 4 - Rising trigger event configuration of line 4" ] # [ inline ( always ) ] pub fn tr4 ( & self ) -> Tr4R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 4 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr4R { bits } } # [ doc = "Bit 5 - Rising trigger event configuration of line 5" ] # [ inline ( always ) ] pub fn tr5 ( & self ) -> Tr5R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 5 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr5R { bits } } # [ doc = "Bit 6 - Rising trigger event configuration of line 6" ] # [ inline ( always ) ] pub fn tr6 ( & self ) -> Tr6R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 6 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr6R { bits } } # [ doc = "Bit 7 - Rising trigger event configuration of line 7" ] # [ inline ( always ) ] pub fn tr7 ( & self ) -> Tr7R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 7 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr7R { bits } } # [ doc = "Bit 8 - Rising trigger event configuration of line 8" ] # [ inline ( always ) ] pub fn tr8 ( & self ) -> Tr8R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 8 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr8R { bits } } # [ doc = "Bit 9 - Rising trigger event configuration of line 9" ] # [ inline ( always ) ] pub fn tr9 ( & self ) -> Tr9R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 9 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr9R { bits } } # [ doc = "Bit 10 - Rising trigger event configuration of line 10" ] # [ inline ( always ) ] pub fn tr10 ( & self ) -> Tr10R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 10 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr10R { bits } } # [ doc = "Bit 11 - Rising trigger event configuration of line 11" ] # [ inline ( always ) ] pub fn tr11 ( & self ) -> Tr11R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 11 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr11R { bits } } # [ doc = "Bit 12 - Rising trigger event configuration of line 12" ] # [ inline ( always ) ] pub fn tr12 ( & self ) -> Tr12R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 12 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr12R { bits } } # [ doc = "Bit 13 - Rising trigger event configuration of line 13" ] # [ inline ( always ) ] pub fn tr13 ( & self ) -> Tr13R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 13 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr13R { bits } } # [ doc = "Bit 14 - Rising trigger event configuration of line 14" ] # [ inline ( always ) ] pub fn tr14 ( & self ) -> Tr14R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 14 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr14R { bits } } # [ doc = "Bit 15 - Rising trigger event configuration of line 15" ] # [ inline ( always ) ] pub fn tr15 ( & self ) -> Tr15R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 15 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr15R { bits } } # [ doc = "Bit 16 - Rising trigger event configuration of line 16" ] # [ inline ( always ) ] pub fn tr16 ( & self ) -> Tr16R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 16 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr16R { bits } } # [ doc = "Bit 17 - Rising trigger event configuration of line 17" ] # [ inline ( always ) ] pub fn tr17 ( & self ) -> Tr17R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 17 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr17R { bits } } # [ doc = "Bit 18 - Rising trigger event configuration of line 18" ] # [ inline ( always ) ] pub fn tr18 ( & self ) -> Tr18R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 18 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr18R { bits } } # [ doc = "Bit 19 - Rising trigger event configuration of line 19" ] # [ inline ( always ) ] pub fn tr19 ( & self ) -> Tr19R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 19 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr19R { bits } } # [ doc = "Bit 20 - Rising trigger event configuration of line 20" ] # [ inline ( always ) ] pub fn tr20 ( & self ) -> Tr20R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 20 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr20R { bits } } # [ doc = "Bit 21 - Rising trigger event configuration of line 21" ] # [ inline ( always ) ] pub fn tr21 ( & self ) -> Tr21R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 21 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr21R { bits } } # [ doc = "Bit 22 - Rising trigger event configuration of line 22" ] # [ inline ( always ) ] pub fn tr22 ( & self ) -> Tr22R { let bits = { const MASK : u8 = 1 ; const OFFSET : u8 = 22 ; ( ( self . bits >> OFFSET ) & MASK as u32 ) as u8 } ; Tr22R { bits } } } impl W { # [ doc = r" Reset value of the register" ] # [ inline ( always ) ] pub fn reset_value ( ) -> W { W { bits : 0 } } # [ doc = r" Writes raw bits to the register" ] # [ inline ( always ) ] pub unsafe fn bits ( & mut self , bits : u32 ) -> & mut Self { self . bits = bits ; self } # [ doc = "Bit 0 - Rising trigger event configuration of line 0" ] # [ inline ( always ) ] pub fn tr0 ( & mut self ) -> _Tr0W { _Tr0W { w : self } } # [ doc = "Bit 1 - Rising trigger event configuration of line 1" ] # [ inline ( always ) ] pub fn tr1 ( & mut self ) -> _Tr1W { _Tr1W { w : self } } # [ doc = "Bit 2 - Rising trigger event configuration of line 2" ] # [ inline ( always ) ] pub fn tr2 ( & mut self ) -> _Tr2W { _Tr2W { w : self } } # [ doc = "Bit 3 - Rising trigger event configuration of line 3" ] # [ inline ( always ) ] pub fn tr3 ( & mut self ) -> _Tr3W { _Tr3W { w : self } } # [ doc = "Bit 4 - Rising trigger event configuration of line 4" ] # [ inline ( always ) ] pub fn tr4 ( & mut self ) -> _Tr4W { _Tr4W { w : self } } # [ doc = "Bit 5 - Rising trigger event configuration of line 5" ] # [ inline ( always ) ] pub fn tr5 ( & mut self ) -> _Tr5W { _Tr5W { w : self } } # [ doc = "Bit 6 - Rising trigger event configuration of line 6" ] # [ inline ( always ) ] pub fn tr6 ( & mut self ) -> _Tr6W { _Tr6W { w : self } } # [ doc = "Bit 7 - Rising trigger event configuration of line 7" ] # [ inline ( always ) ] pub fn tr7 ( & mut self ) -> _Tr7W { _Tr7W { w : self } } # [ doc = "Bit 8 - Rising trigger event configuration of line 8" ] # [ inline ( always ) ] pub fn tr8 ( & mut self ) -> _Tr8W { _Tr8W { w : self } } # [ doc = "Bit 9 - Rising trigger event configuration of line 9" ] # [ inline ( always ) ] pub fn tr9 ( & mut self ) -> _Tr9W { _Tr9W { w : self } } # [ doc = "Bit 10 - Rising trigger event configuration of line 10" ] # [ inline ( always ) ] pub fn tr10 ( & mut self ) -> _Tr10W { _Tr10W { w : self } } # [ doc = "Bit 11 - Rising trigger event configuration of line 11" ] # [ inline ( always ) ] pub fn tr11 ( & mut self ) -> _Tr11W { _Tr11W { w : self } } # [ doc = "Bit 12 - Rising trigger event configuration of line 12" ] # [ inline ( always ) ] pub fn tr12 ( & mut self ) -> _Tr12W { _Tr12W { w : self } } # [ doc = "Bit 13 - Rising trigger event configuration of line 13" ] # [ inline ( always ) ] pub fn tr13 ( & mut self ) -> _Tr13W { _Tr13W { w : self } } # [ doc = "Bit 14 - Rising trigger event configuration of line 14" ] # [ inline ( always ) ] pub fn tr14 ( & mut self ) -> _Tr14W { _Tr14W { w : self } } # [ doc = "Bit 15 - Rising trigger event configuration of line 15" ] # [ inline ( always ) ] pub fn tr15 ( & mut self ) -> _Tr15W { _Tr15W { w : self } } # [ doc = "Bit 16 - Rising trigger event configuration of line 16" ] # [ inline ( always ) ] pub fn tr16 ( & mut self ) -> _Tr16W { _Tr16W { w : self } } # [ doc = "Bit 17 - Rising trigger event configuration of line 17" ] # [ inline ( always ) ] pub fn tr17 ( & mut self ) -> _Tr17W { _Tr17W { w : self } } # [ doc = "Bit 18 - Rising trigger event configuration of line 18" ] # [ inline ( always ) ] pub fn tr18 ( & mut self ) -> _Tr18W { _Tr18W { w : self } } # [ doc = "Bit 19 - Rising trigger event configuration of line 19" ] # [ inline ( always ) ] pub fn tr19 ( & mut self ) -> _Tr19W { _Tr19W { w : self } } # [ doc = "Bit 20 - Rising trigger event configuration of line 20" ] # [ inline ( always ) ] pub fn tr20 ( & mut self ) -> _Tr20W { _Tr20W { w : self } } # [ doc = "Bit 21 - Rising trigger event configuration of line 21" ] # [ inline ( always ) ] pub fn tr21 ( & mut self ) -> _Tr21W { _Tr21W { w : self } } # [ doc = "Bit 22 - Rising trigger event configuration of line 22" ] # [ inline ( always ) ] pub fn tr22 ( & mut self ) -> _Tr22W { _Tr22W { w : self } } }